% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/get_messages.R
\name{get_messages}
\alias{get_messages}
\title{Get GPS data}
\usage{
get_messages(device, tenant, username, password, filter_string = "")
}
\arguments{
\item{device}{device number retried from \code{get_devices}.}

\item{tenant}{The tenant code required for access to the GAP API. This is
provided by CoSignal support.}

\item{username}{Username used to access the ninja tracking control panel.}

\item{password}{Password used to access the ninjac tracking control panel.
removed?}

\item{filter_string}{Additional filter string that can be added to the uri
  string. This will be appended to the end of the http string an uses the
  standard verbs defined by the open api
  (\url{http://www.odata.org/documentation/odata-version-2-0/uri-conventions/})
   and implemented in the GAP API
  (\url{https://developer.globalalerting.com/API?item=ThingsToKnow})}
}
\value{
An object of class \code{response} from the \code{httr} package which
  can be passed to \code{gapAPI::simplify_cattle} for conversion to a
  \code{data.frame}.
}
\description{
\code{get_devices} Gets device numbers from GAP API.
}
\details{
This is a wrapper function for \code{httr::GET} which makes use of
  \code{format_uri} to formulate the correct uri string, and
  \code{jsonlite::fromJSON} to parse the incoming json, and output a
  character vector. This function is called repeatedly by
  \code{gapAPI::get_GPS}, but can be called individually to get a full
  dataframe without simplification.
}
\examples{
messages <- get_messages <- function(
device = <device>,
tenant = <tenant-code>,
username = <username>,
password = <password>
)
print(messages)
}

